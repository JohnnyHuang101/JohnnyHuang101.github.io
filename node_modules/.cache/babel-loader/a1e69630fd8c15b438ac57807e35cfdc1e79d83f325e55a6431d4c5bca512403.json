{"ast":null,"code":"import { Children, isValidElement, cloneElement } from 'react';\nimport Backspace from '../components/Backspace';\nimport Delay from '../components/Delay';\nimport isNil from './isNil';\n/**\n * Determine whether to display contents by looking up the `lines` variable.\n * @param children\n * @param lines\n * @returns\n */\nconst getTypedChildren = (children, lines) => {\n  let lineIdx = 0;\n  const recurse = children => {\n    // React.Children.map will ignore null if the mapping function return null.\n    // For example, React.Children.map(children, () => null) will return [];\n    const typedChildren = Children.map(children, child => {\n      if (lineIdx >= lines.length) return null;\n      if (isValidElement(child)) {\n        // Remove Backspace and Pause from virtual DOM.\n        if (child.type === Backspace || child.type === Delay) return null;\n        const {\n          children,\n          ...props\n        } = child.props;\n        // if children is nil, treat the element as a single line\n        if (isNil(children)) return lines[lineIdx++];\n        const newChildren = recurse(children);\n        // If `newChildren` is an empty array, then we say that\n        // this element's contents have been removed by backspace.\n        if (newChildren && newChildren.length === 0) return null;\n        return cloneElement(child, props, newChildren);\n      }\n      // Only number and string are valid contents that can be typed.\n      if (typeof child === 'string' || typeof child === 'number') return lines[lineIdx++];\n      return null;\n    });\n    return typedChildren;\n  };\n  return recurse(children);\n};\nexport default getTypedChildren;","map":{"version":3,"names":["Children","isValidElement","cloneElement","Backspace","Delay","isNil","getTypedChildren","children","lines","lineIdx","recurse","typedChildren","map","child","length","type","props","newChildren"],"sources":["/Users/johnnyh/Documents/GitHub/JohnnyHuang101.github.io/node_modules/react-typist-component/dist/utils/getTypedChildren.js"],"sourcesContent":["import { Children, isValidElement, cloneElement } from 'react';\nimport Backspace from '../components/Backspace';\nimport Delay from '../components/Delay';\nimport isNil from './isNil';\n/**\n * Determine whether to display contents by looking up the `lines` variable.\n * @param children\n * @param lines\n * @returns\n */\nconst getTypedChildren = (children, lines) => {\n    let lineIdx = 0;\n    const recurse = (children) => {\n        // React.Children.map will ignore null if the mapping function return null.\n        // For example, React.Children.map(children, () => null) will return [];\n        const typedChildren = Children.map(children, child => {\n            if (lineIdx >= lines.length)\n                return null;\n            if (isValidElement(child)) {\n                // Remove Backspace and Pause from virtual DOM.\n                if (child.type === Backspace || child.type === Delay)\n                    return null;\n                const { children, ...props } = child.props;\n                // if children is nil, treat the element as a single line\n                if (isNil(children))\n                    return lines[lineIdx++];\n                const newChildren = recurse(children);\n                // If `newChildren` is an empty array, then we say that\n                // this element's contents have been removed by backspace.\n                if (newChildren && newChildren.length === 0)\n                    return null;\n                return cloneElement(child, props, newChildren);\n            }\n            // Only number and string are valid contents that can be typed.\n            if (typeof child === 'string' || typeof child === 'number')\n                return lines[lineIdx++];\n            return null;\n        });\n        return typedChildren;\n    };\n    return recurse(children);\n};\nexport default getTypedChildren;\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,cAAc,EAAEC,YAAY,QAAQ,OAAO;AAC9D,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAC1C,IAAIC,OAAO,GAAG,CAAC;EACf,MAAMC,OAAO,GAAIH,QAAQ,IAAK;IAC1B;IACA;IACA,MAAMI,aAAa,GAAGX,QAAQ,CAACY,GAAG,CAACL,QAAQ,EAAEM,KAAK,IAAI;MAClD,IAAIJ,OAAO,IAAID,KAAK,CAACM,MAAM,EACvB,OAAO,IAAI;MACf,IAAIb,cAAc,CAACY,KAAK,CAAC,EAAE;QACvB;QACA,IAAIA,KAAK,CAACE,IAAI,KAAKZ,SAAS,IAAIU,KAAK,CAACE,IAAI,KAAKX,KAAK,EAChD,OAAO,IAAI;QACf,MAAM;UAAEG,QAAQ;UAAE,GAAGS;QAAM,CAAC,GAAGH,KAAK,CAACG,KAAK;QAC1C;QACA,IAAIX,KAAK,CAACE,QAAQ,CAAC,EACf,OAAOC,KAAK,CAACC,OAAO,EAAE,CAAC;QAC3B,MAAMQ,WAAW,GAAGP,OAAO,CAACH,QAAQ,CAAC;QACrC;QACA;QACA,IAAIU,WAAW,IAAIA,WAAW,CAACH,MAAM,KAAK,CAAC,EACvC,OAAO,IAAI;QACf,OAAOZ,YAAY,CAACW,KAAK,EAAEG,KAAK,EAAEC,WAAW,CAAC;MAClD;MACA;MACA,IAAI,OAAOJ,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,KAAK,QAAQ,EACtD,OAAOL,KAAK,CAACC,OAAO,EAAE,CAAC;MAC3B,OAAO,IAAI;IACf,CAAC,CAAC;IACF,OAAOE,aAAa;EACxB,CAAC;EACD,OAAOD,OAAO,CAACH,QAAQ,CAAC;AAC5B,CAAC;AACD,eAAeD,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}