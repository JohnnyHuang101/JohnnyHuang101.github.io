{"ast":null,"code":"import React from 'react';\nimport isNil from './isNil';\n/**\r\n * Insert the cursor after the latest typed character.\r\n */\nconst insertCursor = (typedChildren, cursor) => {\n  if (typeof cursor !== 'string') {\n    const {\n      children,\n      ...props\n    } = cursor.props;\n    if (!cursor.key) props.key = 'typist-cursor';\n    cursor = React.cloneElement(cursor, props, children);\n  }\n  const recurse = typedChildren => {\n    if (!typedChildren) return typedChildren;\n    // show cursor at the beginning or when all contents are deleted by backspace\n    if (typedChildren.length === 0) return [cursor];\n    const lastChild = typedChildren[typedChildren.length - 1];\n    if (typeof lastChild === 'string') return [...typedChildren, cursor];\n    const {\n      children,\n      ...props\n    } = lastChild.props;\n    // if lastChild does not have children, insert the cursor after it\n    if (isNil(children)) return [...typedChildren, cursor];\n    const afterInsert = recurse(children);\n    const el = React.cloneElement(lastChild, props, afterInsert);\n    return [...typedChildren.slice(0, -1), el];\n  };\n  return recurse(typedChildren);\n};\nexport default insertCursor;","map":{"version":3,"names":["React","isNil","insertCursor","typedChildren","cursor","children","props","key","cloneElement","recurse","length","lastChild","afterInsert","el","slice"],"sources":["C:/Users/Owner/OneDrive/Documents/GitHub/JohnnyHuang101.github.io/node_modules/react-typist-component/dist/utils/insertCursor.js"],"sourcesContent":["import React from 'react';\r\nimport isNil from './isNil';\r\n/**\r\n * Insert the cursor after the latest typed character.\r\n */\r\nconst insertCursor = (typedChildren, cursor) => {\r\n    if (typeof cursor !== 'string') {\r\n        const { children, ...props } = cursor.props;\r\n        if (!cursor.key)\r\n            props.key = 'typist-cursor';\r\n        cursor = React.cloneElement(cursor, props, children);\r\n    }\r\n    const recurse = (typedChildren) => {\r\n        if (!typedChildren)\r\n            return typedChildren;\r\n        // show cursor at the beginning or when all contents are deleted by backspace\r\n        if (typedChildren.length === 0)\r\n            return [cursor];\r\n        const lastChild = typedChildren[typedChildren.length - 1];\r\n        if (typeof lastChild === 'string')\r\n            return [...typedChildren, cursor];\r\n        const { children, ...props } = lastChild.props;\r\n        // if lastChild does not have children, insert the cursor after it\r\n        if (isNil(children))\r\n            return [...typedChildren, cursor];\r\n        const afterInsert = recurse(children);\r\n        const el = React.cloneElement(lastChild, props, afterInsert);\r\n        return [...typedChildren.slice(0, -1), el];\r\n    };\r\n    return recurse(typedChildren);\r\n};\r\nexport default insertCursor;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B;AACA;AACA;AACA,MAAMC,YAAY,GAAGA,CAACC,aAAa,EAAEC,MAAM,KAAK;EAC5C,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IAC5B,MAAM;MAAEC,QAAQ;MAAE,GAAGC;IAAM,CAAC,GAAGF,MAAM,CAACE,KAAK;IAC3C,IAAI,CAACF,MAAM,CAACG,GAAG,EACXD,KAAK,CAACC,GAAG,GAAG,eAAe;IAC/BH,MAAM,GAAGJ,KAAK,CAACQ,YAAY,CAACJ,MAAM,EAAEE,KAAK,EAAED,QAAQ,CAAC;EACxD;EACA,MAAMI,OAAO,GAAIN,aAAa,IAAK;IAC/B,IAAI,CAACA,aAAa,EACd,OAAOA,aAAa;IACxB;IACA,IAAIA,aAAa,CAACO,MAAM,KAAK,CAAC,EAC1B,OAAO,CAACN,MAAM,CAAC;IACnB,MAAMO,SAAS,GAAGR,aAAa,CAACA,aAAa,CAACO,MAAM,GAAG,CAAC,CAAC;IACzD,IAAI,OAAOC,SAAS,KAAK,QAAQ,EAC7B,OAAO,CAAC,GAAGR,aAAa,EAAEC,MAAM,CAAC;IACrC,MAAM;MAAEC,QAAQ;MAAE,GAAGC;IAAM,CAAC,GAAGK,SAAS,CAACL,KAAK;IAC9C;IACA,IAAIL,KAAK,CAACI,QAAQ,CAAC,EACf,OAAO,CAAC,GAAGF,aAAa,EAAEC,MAAM,CAAC;IACrC,MAAMQ,WAAW,GAAGH,OAAO,CAACJ,QAAQ,CAAC;IACrC,MAAMQ,EAAE,GAAGb,KAAK,CAACQ,YAAY,CAACG,SAAS,EAAEL,KAAK,EAAEM,WAAW,CAAC;IAC5D,OAAO,CAAC,GAAGT,aAAa,CAACW,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAED,EAAE,CAAC;EAC9C,CAAC;EACD,OAAOJ,OAAO,CAACN,aAAa,CAAC;AACjC,CAAC;AACD,eAAeD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}