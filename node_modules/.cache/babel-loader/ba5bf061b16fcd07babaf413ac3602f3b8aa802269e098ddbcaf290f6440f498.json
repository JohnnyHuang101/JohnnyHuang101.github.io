{"ast":null,"code":"import { Fragment as _Fragment, jsx as _jsx } from \"react/jsx-runtime\";\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport insertCursor from '../utils/insertCursor';\nimport { defaultSplitter, emptyFunc } from '../utils/defaultFuncs';\nimport getTypedChildrenArray from '../utils/getTypedChildrenArray';\nimport getActions from '../utils/getActions';\nconst Main = _ref => {\n  let {\n    cursor,\n    disabled = false,\n    restartKey,\n    children,\n    splitter = defaultSplitter,\n    typingDelay = 75,\n    backspaceDelay = typingDelay,\n    onTypingDone,\n    startDelay = 0,\n    finishDelay = 0,\n    loop = false,\n    pause = false,\n    hideCursorWhenDone = false\n  } = _ref;\n  const [typedChildrenArray, setTypedChildrenArray] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const clearTimerRef = useRef(emptyFunc);\n  const loopRef = useRef(loop);\n  const pauseRef = useRef(pause);\n  const hideCursorWhenDoneRef = useRef(hideCursorWhenDone);\n  const [showCursor, setShowCursor] = useState(true);\n  const timeoutPromise = useCallback(delay => {\n    return new Promise((resolve, reject) => {\n      const ms = typeof delay === 'number' ? delay : delay();\n      const timeoutId = setTimeout(resolve, ms);\n      clearTimerRef.current = () => {\n        clearTimeout(timeoutId);\n        reject();\n      };\n    });\n  }, []);\n  const pausePromise = useCallback(() => {\n    return new Promise((resolve, reject) => {\n      const intervalId = setInterval(() => {\n        if (!pauseRef.current) {\n          clearInterval(intervalId);\n          resolve();\n        }\n      });\n      clearTimerRef.current = () => {\n        clearInterval(intervalId);\n        reject();\n      };\n    });\n  }, []);\n  const loopPromise = useCallback(() => {\n    return new Promise((resolve, reject) => {\n      const intervalId = setInterval(() => {\n        if (loopRef.current) {\n          clearInterval(intervalId);\n          resolve();\n        }\n      });\n      clearTimerRef.current = () => {\n        clearInterval(intervalId);\n        reject();\n      };\n    });\n  }, []);\n  useEffect(() => {\n    loopRef.current = loop;\n    pauseRef.current = pause;\n    hideCursorWhenDoneRef.current = hideCursorWhenDone;\n  }, [loop, pause, hideCursorWhenDone]);\n  useEffect(() => {\n    const typedChildrenArray = getTypedChildrenArray(children, splitter);\n    setTypedChildrenArray(typedChildrenArray);\n    if (disabled) {\n      setCurrentIndex(typedChildrenArray.length - 1);\n      return;\n    }\n    (async () => {\n      try {\n        do {\n          setShowCursor(true);\n          setCurrentIndex(-1);\n          const actions = getActions(children, splitter);\n          if (startDelay > 0) await timeoutPromise(startDelay);\n          for (const {\n            type,\n            payload\n          } of actions) {\n            if (pauseRef.current) await pausePromise();\n            if (type === 'TYPE_TOKEN') {\n              setCurrentIndex(prev => prev + 1);\n              await timeoutPromise(typingDelay);\n            } else if (type === 'BACKSPACE') {\n              let amount = payload;\n              while (amount--) {\n                setCurrentIndex(prev => prev + 1);\n                await timeoutPromise(backspaceDelay);\n              }\n            } else if (type === 'PASTE') {\n              setCurrentIndex(prev => prev + 1);\n            } else if (type === 'DELAY') {\n              await timeoutPromise(payload);\n            }\n          }\n          onTypingDone?.();\n          if (hideCursorWhenDoneRef.current) setShowCursor(false);\n          if (finishDelay > 0) await timeoutPromise(finishDelay);\n          if (!loopRef.current) await loopPromise();\n        } while (loopRef.current);\n      } catch (error) {\n        // do nothing\n      }\n    })();\n    return () => {\n      clearTimerRef.current();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [restartKey, disabled]);\n  const typedChildren = typedChildrenArray[currentIndex];\n  return _jsx(_Fragment, {\n    children: cursor && showCursor ? insertCursor(typedChildren, cursor) : typedChildren\n  });\n};\nexport default Main;","map":{"version":3,"names":["Fragment","_Fragment","jsx","_jsx","useCallback","useEffect","useRef","useState","insertCursor","defaultSplitter","emptyFunc","getTypedChildrenArray","getActions","Main","_ref","cursor","disabled","restartKey","children","splitter","typingDelay","backspaceDelay","onTypingDone","startDelay","finishDelay","loop","pause","hideCursorWhenDone","typedChildrenArray","setTypedChildrenArray","currentIndex","setCurrentIndex","clearTimerRef","loopRef","pauseRef","hideCursorWhenDoneRef","showCursor","setShowCursor","timeoutPromise","delay","Promise","resolve","reject","ms","timeoutId","setTimeout","current","clearTimeout","pausePromise","intervalId","setInterval","clearInterval","loopPromise","length","actions","type","payload","prev","amount","error","typedChildren"],"sources":["C:/Users/Owner/OneDrive/Documents/GitHub/JohnnyHuang101.github.io/node_modules/react-typist-component/dist/components/Main.js"],"sourcesContent":["import { Fragment as _Fragment, jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { useCallback, useEffect, useRef, useState } from 'react';\r\nimport insertCursor from '../utils/insertCursor';\r\nimport { defaultSplitter, emptyFunc } from '../utils/defaultFuncs';\r\nimport getTypedChildrenArray from '../utils/getTypedChildrenArray';\r\nimport getActions from '../utils/getActions';\r\nconst Main = ({ cursor, disabled = false, restartKey, children, splitter = defaultSplitter, typingDelay = 75, backspaceDelay = typingDelay, onTypingDone, startDelay = 0, finishDelay = 0, loop = false, pause = false, hideCursorWhenDone = false, }) => {\r\n    const [typedChildrenArray, setTypedChildrenArray] = useState([]);\r\n    const [currentIndex, setCurrentIndex] = useState(-1);\r\n    const clearTimerRef = useRef(emptyFunc);\r\n    const loopRef = useRef(loop);\r\n    const pauseRef = useRef(pause);\r\n    const hideCursorWhenDoneRef = useRef(hideCursorWhenDone);\r\n    const [showCursor, setShowCursor] = useState(true);\r\n    const timeoutPromise = useCallback((delay) => {\r\n        return new Promise((resolve, reject) => {\r\n            const ms = typeof delay === 'number' ? delay : delay();\r\n            const timeoutId = setTimeout(resolve, ms);\r\n            clearTimerRef.current = () => {\r\n                clearTimeout(timeoutId);\r\n                reject();\r\n            };\r\n        });\r\n    }, []);\r\n    const pausePromise = useCallback(() => {\r\n        return new Promise((resolve, reject) => {\r\n            const intervalId = setInterval(() => {\r\n                if (!pauseRef.current) {\r\n                    clearInterval(intervalId);\r\n                    resolve();\r\n                }\r\n            });\r\n            clearTimerRef.current = () => {\r\n                clearInterval(intervalId);\r\n                reject();\r\n            };\r\n        });\r\n    }, []);\r\n    const loopPromise = useCallback(() => {\r\n        return new Promise((resolve, reject) => {\r\n            const intervalId = setInterval(() => {\r\n                if (loopRef.current) {\r\n                    clearInterval(intervalId);\r\n                    resolve();\r\n                }\r\n            });\r\n            clearTimerRef.current = () => {\r\n                clearInterval(intervalId);\r\n                reject();\r\n            };\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n        loopRef.current = loop;\r\n        pauseRef.current = pause;\r\n        hideCursorWhenDoneRef.current = hideCursorWhenDone;\r\n    }, [loop, pause, hideCursorWhenDone]);\r\n    useEffect(() => {\r\n        const typedChildrenArray = getTypedChildrenArray(children, splitter);\r\n        setTypedChildrenArray(typedChildrenArray);\r\n        if (disabled) {\r\n            setCurrentIndex(typedChildrenArray.length - 1);\r\n            return;\r\n        }\r\n        (async () => {\r\n            try {\r\n                do {\r\n                    setShowCursor(true);\r\n                    setCurrentIndex(-1);\r\n                    const actions = getActions(children, splitter);\r\n                    if (startDelay > 0)\r\n                        await timeoutPromise(startDelay);\r\n                    for (const { type, payload } of actions) {\r\n                        if (pauseRef.current)\r\n                            await pausePromise();\r\n                        if (type === 'TYPE_TOKEN') {\r\n                            setCurrentIndex(prev => prev + 1);\r\n                            await timeoutPromise(typingDelay);\r\n                        }\r\n                        else if (type === 'BACKSPACE') {\r\n                            let amount = payload;\r\n                            while (amount--) {\r\n                                setCurrentIndex(prev => prev + 1);\r\n                                await timeoutPromise(backspaceDelay);\r\n                            }\r\n                        }\r\n                        else if (type === 'PASTE') {\r\n                            setCurrentIndex(prev => prev + 1);\r\n                        }\r\n                        else if (type === 'DELAY') {\r\n                            await timeoutPromise(payload);\r\n                        }\r\n                    }\r\n                    onTypingDone?.();\r\n                    if (hideCursorWhenDoneRef.current)\r\n                        setShowCursor(false);\r\n                    if (finishDelay > 0)\r\n                        await timeoutPromise(finishDelay);\r\n                    if (!loopRef.current)\r\n                        await loopPromise();\r\n                } while (loopRef.current);\r\n            }\r\n            catch (error) {\r\n                // do nothing\r\n            }\r\n        })();\r\n        return () => {\r\n            clearTimerRef.current();\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [restartKey, disabled]);\r\n    const typedChildren = typedChildrenArray[currentIndex];\r\n    return (_jsx(_Fragment, { children: cursor && showCursor\r\n            ? insertCursor(typedChildren, cursor)\r\n            : typedChildren }));\r\n};\r\nexport default Main;\r\n"],"mappings":"AAAA,SAASA,QAAQ,IAAIC,SAAS,EAAEC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AACtE,SAASC,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAChE,OAAOC,YAAY,MAAM,uBAAuB;AAChD,SAASC,eAAe,EAAEC,SAAS,QAAQ,uBAAuB;AAClE,OAAOC,qBAAqB,MAAM,gCAAgC;AAClE,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,MAAMC,IAAI,GAAGC,IAAA,IAA6O;EAAA,IAA5O;IAAEC,MAAM;IAAEC,QAAQ,GAAG,KAAK;IAAEC,UAAU;IAAEC,QAAQ;IAAEC,QAAQ,GAAGV,eAAe;IAAEW,WAAW,GAAG,EAAE;IAAEC,cAAc,GAAGD,WAAW;IAAEE,YAAY;IAAEC,UAAU,GAAG,CAAC;IAAEC,WAAW,GAAG,CAAC;IAAEC,IAAI,GAAG,KAAK;IAAEC,KAAK,GAAG,KAAK;IAAEC,kBAAkB,GAAG;EAAO,CAAC,GAAAb,IAAA;EACjP,MAAM,CAACc,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAMyB,aAAa,GAAG1B,MAAM,CAACI,SAAS,CAAC;EACvC,MAAMuB,OAAO,GAAG3B,MAAM,CAACmB,IAAI,CAAC;EAC5B,MAAMS,QAAQ,GAAG5B,MAAM,CAACoB,KAAK,CAAC;EAC9B,MAAMS,qBAAqB,GAAG7B,MAAM,CAACqB,kBAAkB,CAAC;EACxD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM+B,cAAc,GAAGlC,WAAW,CAAEmC,KAAK,IAAK;IAC1C,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpC,MAAMC,EAAE,GAAG,OAAOJ,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAGA,KAAK,CAAC,CAAC;MACtD,MAAMK,SAAS,GAAGC,UAAU,CAACJ,OAAO,EAAEE,EAAE,CAAC;MACzCX,aAAa,CAACc,OAAO,GAAG,MAAM;QAC1BC,YAAY,CAACH,SAAS,CAAC;QACvBF,MAAM,CAAC,CAAC;MACZ,CAAC;IACL,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,MAAMM,YAAY,GAAG5C,WAAW,CAAC,MAAM;IACnC,OAAO,IAAIoC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpC,MAAMO,UAAU,GAAGC,WAAW,CAAC,MAAM;QACjC,IAAI,CAAChB,QAAQ,CAACY,OAAO,EAAE;UACnBK,aAAa,CAACF,UAAU,CAAC;UACzBR,OAAO,CAAC,CAAC;QACb;MACJ,CAAC,CAAC;MACFT,aAAa,CAACc,OAAO,GAAG,MAAM;QAC1BK,aAAa,CAACF,UAAU,CAAC;QACzBP,MAAM,CAAC,CAAC;MACZ,CAAC;IACL,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,MAAMU,WAAW,GAAGhD,WAAW,CAAC,MAAM;IAClC,OAAO,IAAIoC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpC,MAAMO,UAAU,GAAGC,WAAW,CAAC,MAAM;QACjC,IAAIjB,OAAO,CAACa,OAAO,EAAE;UACjBK,aAAa,CAACF,UAAU,CAAC;UACzBR,OAAO,CAAC,CAAC;QACb;MACJ,CAAC,CAAC;MACFT,aAAa,CAACc,OAAO,GAAG,MAAM;QAC1BK,aAAa,CAACF,UAAU,CAAC;QACzBP,MAAM,CAAC,CAAC;MACZ,CAAC;IACL,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACNrC,SAAS,CAAC,MAAM;IACZ4B,OAAO,CAACa,OAAO,GAAGrB,IAAI;IACtBS,QAAQ,CAACY,OAAO,GAAGpB,KAAK;IACxBS,qBAAqB,CAACW,OAAO,GAAGnB,kBAAkB;EACtD,CAAC,EAAE,CAACF,IAAI,EAAEC,KAAK,EAAEC,kBAAkB,CAAC,CAAC;EACrCtB,SAAS,CAAC,MAAM;IACZ,MAAMuB,kBAAkB,GAAGjB,qBAAqB,CAACO,QAAQ,EAAEC,QAAQ,CAAC;IACpEU,qBAAqB,CAACD,kBAAkB,CAAC;IACzC,IAAIZ,QAAQ,EAAE;MACVe,eAAe,CAACH,kBAAkB,CAACyB,MAAM,GAAG,CAAC,CAAC;MAC9C;IACJ;IACA,CAAC,YAAY;MACT,IAAI;QACA,GAAG;UACChB,aAAa,CAAC,IAAI,CAAC;UACnBN,eAAe,CAAC,CAAC,CAAC,CAAC;UACnB,MAAMuB,OAAO,GAAG1C,UAAU,CAACM,QAAQ,EAAEC,QAAQ,CAAC;UAC9C,IAAII,UAAU,GAAG,CAAC,EACd,MAAMe,cAAc,CAACf,UAAU,CAAC;UACpC,KAAK,MAAM;YAAEgC,IAAI;YAAEC;UAAQ,CAAC,IAAIF,OAAO,EAAE;YACrC,IAAIpB,QAAQ,CAACY,OAAO,EAChB,MAAME,YAAY,CAAC,CAAC;YACxB,IAAIO,IAAI,KAAK,YAAY,EAAE;cACvBxB,eAAe,CAAC0B,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;cACjC,MAAMnB,cAAc,CAAClB,WAAW,CAAC;YACrC,CAAC,MACI,IAAImC,IAAI,KAAK,WAAW,EAAE;cAC3B,IAAIG,MAAM,GAAGF,OAAO;cACpB,OAAOE,MAAM,EAAE,EAAE;gBACb3B,eAAe,CAAC0B,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;gBACjC,MAAMnB,cAAc,CAACjB,cAAc,CAAC;cACxC;YACJ,CAAC,MACI,IAAIkC,IAAI,KAAK,OAAO,EAAE;cACvBxB,eAAe,CAAC0B,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;YACrC,CAAC,MACI,IAAIF,IAAI,KAAK,OAAO,EAAE;cACvB,MAAMjB,cAAc,CAACkB,OAAO,CAAC;YACjC;UACJ;UACAlC,YAAY,GAAG,CAAC;UAChB,IAAIa,qBAAqB,CAACW,OAAO,EAC7BT,aAAa,CAAC,KAAK,CAAC;UACxB,IAAIb,WAAW,GAAG,CAAC,EACf,MAAMc,cAAc,CAACd,WAAW,CAAC;UACrC,IAAI,CAACS,OAAO,CAACa,OAAO,EAChB,MAAMM,WAAW,CAAC,CAAC;QAC3B,CAAC,QAAQnB,OAAO,CAACa,OAAO;MAC5B,CAAC,CACD,OAAOa,KAAK,EAAE;QACV;MAAA;IAER,CAAC,EAAE,CAAC;IACJ,OAAO,MAAM;MACT3B,aAAa,CAACc,OAAO,CAAC,CAAC;IAC3B,CAAC;IACD;EACJ,CAAC,EAAE,CAAC7B,UAAU,EAAED,QAAQ,CAAC,CAAC;EAC1B,MAAM4C,aAAa,GAAGhC,kBAAkB,CAACE,YAAY,CAAC;EACtD,OAAQ3B,IAAI,CAACF,SAAS,EAAE;IAAEiB,QAAQ,EAAEH,MAAM,IAAIqB,UAAU,GAC9C5B,YAAY,CAACoD,aAAa,EAAE7C,MAAM,CAAC,GACnC6C;EAAc,CAAC,CAAC;AAC9B,CAAC;AACD,eAAe/C,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}